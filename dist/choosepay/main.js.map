{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/first-tab/first-tab.component.html","webpack:///./src/app/first-tab/first-tab.component.scss","webpack:///./src/app/first-tab/first-tab.component.ts","webpack:///./src/app/form-fields.service.ts","webpack:///./src/app/second-tab/second-tab.component.html","webpack:///./src/app/second-tab/second-tab.component.scss","webpack:///./src/app/second-tab/second-tab.component.ts","webpack:///./src/app/third-tab/third-tab.component.html","webpack:///./src/app/third-tab/third-tab.component.scss","webpack:///./src/app/third-tab/third-tab.component.ts","webpack:///./src/app/thx/thx.component.html","webpack:///./src/app/thx/thx.component.scss","webpack:///./src/app/thx/thx.component.ts","webpack:///./src/app/userData.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {FirstTabComponent} from './first-tab/first-tab.component';\nimport {SecondTabComponent} from './second-tab/second-tab.component';\nimport {ThirdTabComponent} from './third-tab/third-tab.component';\nimport {ThxComponent} from './thx/thx.component';\n\n\nconst routes: Routes = [\n    {path: '', component: FirstTabComponent}\n    , {path: 'info', component: SecondTabComponent}\n    , {path: 'payment', component: ThirdTabComponent}\n    , {path: 'thx', component: ThxComponent}\n];\n\n@NgModule({\n    imports: [\n        CommonModule\n        , RouterModule.forRoot(routes, {useHash: true}) /*ставим флаг использования #*/\n    ]\n    , exports: [RouterModule]\n    , declarations: []\n})\nexport class AppRoutingModule {\n}\n","module.exports = \"<div class=\\\"container  m-b-1\\\">\\r\\n    <div class=\\\"columns\\\">\\r\\n        <div class=\\\"column col-2\\\"></div>\\r\\n        <div class=\\\"column col-8\\\">\\r\\n            <router-outlet></router-outlet>\\r\\n        </div>\\r\\n        <div class=\\\"column col-2\\\"></div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'choosepay';\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {AppRoutingModule} from './app-routing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FirstTabComponent} from './first-tab/first-tab.component';\nimport {SecondTabComponent} from './second-tab/second-tab.component';\nimport {ThirdTabComponent} from './third-tab/third-tab.component';\nimport {UserData} from './userData';\nimport { ThxComponent } from './thx/thx.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        FirstTabComponent,\n        SecondTabComponent,\n        ThirdTabComponent,\n        ThxComponent\n    ],\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        AppRoutingModule,\n        ReactiveFormsModule\n    ],\n    providers: [UserData],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","module.exports = \"<ul class=\\\"tab tab-block\\\">\\n    <li class=\\\"tab-item active\\\">\\n        <a>Choise plan</a>\\n    </li>\\n    <li class=\\\"tab-item\\\">\\n        <a>Information</a>\\n    </li>\\n    <li class=\\\"tab-item\\\">\\n        <a>Billing</a>\\n    </li>\\n</ul>\\n\\n<div class=\\\"container \\\">\\n    <h3 class=\\\"p-t-1\\\">A plan to suit you</h3>\\n    <div class=\\\"columns\\\">\\n        <div class=\\\"column col-4 col-xs-12 col-sm-12 col-md-12 cursor-pointer plan-div m-b-1\\\"\\n             [ngClass]=\\\"{'active': p.id == selectedPlan.id}\\\"\\n             (click)=\\\"onSelectPlan(p)\\\" *ngFor=\\\"let p of plans\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-image\\\">\\n                    <!--вставил картину по умолчанию тк просто нету других картинок-->\\n                    <img class=\\\"w-100p\\\" src=\\\"assets/bg1.jpg\\\" alt=\\\"\\\">\\n                </div>\\n                <div class=\\\"card-header\\\">\\n                    <div class=\\\"card-title h5\\\">{{p.title}}</div>\\n                    <div class=\\\"card-subtitle text-gray\\\">{{p.currency}}{{p.price}}</div>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n    <div *ngIf=\\\"selectedPlan\\\" class=\\\"p-t-1 text-right\\\">\\n        <button (click)=\\\"next()\\\" [disabled]=\\\"selectedPlan.id==-1\\\" class=\\\"btn btn-primary w-7rem\\\">Continue</button>\\n    </div>\\n</div>\"","module.exports = \".plan-div.active .card {\\n  border-color: #686868; }\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {UserData} from '../userData';\nimport {FormFieldsService, Plan} from '../form-fields.service';\n\n@Component({\n    selector: 'app-first-tab',\n    templateUrl: './first-tab.component.html',\n    styleUrls: ['./first-tab.component.scss']\n})\nexport class FirstTabComponent implements OnInit {\n\n    plans: Plan[] = [];\n    selectedPlan: Plan;\n\n    constructor(\n        private router: Router\n        , private userData: UserData\n        , private  formFields: FormFieldsService\n    ) {\n    }\n\n    next() {\n        if (this.selectedPlan != null) {\n            /*если все выбрано записываем план в глоб перемен*/\n            this.userData.selectedPlan = this.selectedPlan;\n            /*следующий таб*/\n            this.router.navigate(['info']);\n        }\n    }\n\n    /*событие выора плана*/\n    onSelectPlan(p: Plan) {\n        this.selectedPlan = p;\n    }\n\n    ngOnInit() {\n        /*проверка на предыдущий выбор*/\n        this.selectedPlan = this.userData.selectedPlan;\n        /*планы*/\n        this.formFields.getPlans().subscribe(data => this.plans = data['plans']);\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {FormControl} from '@angular/forms';\n/*интерфейсы фходных данных формы*/\nexport interface Plan {\n    id: number;\n    title: string;\n    price: number;\n    preview: string;\n    currency: string;\n}\n\n\nexport interface FieldItem {\n    id: number;\n    title: string;\n}\n\nexport interface Field {\n    id: string;\n    title: string;\n    type: string;\n    pattern: string;\n    items: FieldItem[];\n    control: FormControl;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FormFieldsService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    getPlans() {\n        return this.http.get('assets/plans.json');\n    }\n\n    getInfo() {\n        return this.http.get('assets/information.json');\n    }\n\n}\n","module.exports = \"<ul class=\\\"tab tab-block\\\">\\n    <li class=\\\"tab-item\\\">\\n        <a name=\\\"routing-strategies\\\" href=\\\"#\\\">Choise plan</a>\\n    </li>\\n    <li class=\\\"tab-item active\\\">\\n        <a>Information</a>\\n    </li>\\n    <li class=\\\"tab-item\\\">\\n        <a>Billing</a>\\n    </li>\\n</ul>\\n\\n<div class=\\\"container\\\">\\n    <h3 class=\\\"p-t-1\\\">Let's finish powering you up!</h3>\\n\\n    <div class=\\\"columns\\\" [formGroup]=\\\"userForm\\\">\\n        <div *ngFor=\\\"let f of fields\\\"\\n             [ngClass]=\\\"{'col-12': f.type == 'select', 'col-6': f.type != 'select'}\\\"\\n             class=\\\"column  col-xs-12 col-sm-12 col-md-12 p-t-1\\\">\\n            <div *ngIf=\\\"f.type=='text'\\\" class=\\\"form-group\\\">\\n                <input formControlName=\\\"{{f.id}}\\\" class=\\\"form-input\\\" type=\\\"text\\\"\\n                       placeholder=\\\"{{f.title}}\\\">\\n            </div>\\n            <div *ngIf=\\\"f.type=='email'\\\" class=\\\"form-group\\\">\\n                <input formControlName=\\\"{{f.id}}\\\" class=\\\"form-input\\\" type=\\\"email\\\"\\n                       placeholder=\\\"{{f.title}}\\\">\\n            </div>\\n            <div *ngIf=\\\"f.type=='phone'\\\" class=\\\"form-group\\\">\\n                <input formControlName=\\\"{{f.id}}\\\" class=\\\"form-input\\\" type=\\\"phone\\\"\\n                       placeholder=\\\"{{f.title}}\\\">\\n            </div>\\n            <div *ngIf=\\\"f.type=='select'\\\" class=\\\"form-group\\\">\\n                <select formControlName=\\\"{{f.id}}\\\" class=\\\"form-select\\\">\\n                    <option selected value=\\\"\\\">{{f.title}}</option>\\n                    <option *ngFor=\\\"let opt of f.items\\\" [value]=\\\"opt.id\\\">{{opt.title}}</option>\\n                </select>\\n            </div>\\n        </div>\\n\\n\\n    </div>\\n    <div class=\\\"p-t-1 text-right\\\">\\n        <button  [disabled]=\\\"this.userForm.status === 'INVALID'\\\" (click)=\\\"next()\\\" class=\\\"btn btn-primary w-7rem\\\">Continue</button>\\n    </div>\\n\\n</div>\"","module.exports = \"\"","/*вкладка Info*/\n\nimport {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {UserData} from '../userData';\nimport {Field, FormFieldsService} from '../form-fields.service';\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\n\n@Component({\n    selector: 'app-second-tab',\n    templateUrl: './second-tab.component.html',\n    styleUrls: ['./second-tab.component.scss']\n})\nexport class SecondTabComponent implements OnInit {\n\n    /*форма Reactive Forms*/\n    userForm = new FormGroup({});\n    /*поля ввода*/\n    fields: Field[];\n\n    constructor(\n        private router: Router\n        , private userData: UserData\n        , private  formFields: FormFieldsService\n    ) {\n    }\n\n    /*событие надатие кнопки далее*/\n    next() {\n        /*если форма валидна редиректим далее*/\n        if (this.userForm.status === 'VALID') {\n            this.userData.fields = this.userForm.value;\n            this.router.navigate(['payment']);\n        }\n    }\n\n    ngOnInit() {\n        /*проверка на предыдущий выбор*/\n        if (this.userData.selectedPlan.id === -1) {\n            /*если ничего не выбрано редиректив начало*/\n            this.router.navigate(['']);\n        } else {\n            /*планы*/\n            this.formFields.getInfo().subscribe(data => {\n                this.fields = data['fields'];\n\n                this.fields.map((item, key) => {\n\n                    /*значение поля*/\n                    let formState = '';\n                    /*если что-то есть в заполненных предыдущих дынных*/\n                    if (this.userData.fields != null) {\n                        formState = this.userData.fields[item.id];\n                    }\n\n                    /*проврка валидности полей*/\n                    if (item.pattern == null) {\n                        /*если не нужна*/\n                        this.userForm.addControl(\n                            item.id,\n                            new FormControl(formState)\n                        );\n                    } else {\n                        /*если нужна валидация*/\n                        this.userForm.addControl(\n                            item.id,\n                            new FormControl(formState, Validators.compose([\n                                Validators.required,\n                                /*убираем лишние слэши*/\n                                Validators.pattern(item.pattern.replace(/\\\\{2,}/g, '\\\\')\n                                )\n                            ]))\n                        );\n                    }\n\n                });\n            });\n        }\n\n    }\n\n}\n","module.exports = \"<ul class=\\\"tab tab-block\\\">\\n    <li class=\\\"tab-item\\\">\\n        <a name=\\\"routing-strategies\\\" href=\\\"#\\\">Choise plan</a>\\n    </li>\\n    <li class=\\\"tab-item\\\">\\n        <a name=\\\"routing-strategies\\\" href=\\\"#info\\\">Information</a>\\n    </li>\\n    <li class=\\\"tab-item active\\\">\\n        <a>Billing</a>\\n    </li>\\n</ul>\\n\\n<div *ngIf=\\\"fields\\\" class=\\\"container\\\">\\n\\n    <div class=\\\"columns\\\">\\n        <div class=\\\"column col-6 col-xs-12 col-sm-12 col-md-12\\\">\\n            <h3 class=\\\"p-t-1\\\">Your plan:</h3>\\n            <h5 class=\\\"p-t-1\\\">{{selectedPlan.title}}</h5>\\n            <h5>{{selectedPlan.currency}}{{selectedPlan.price}}</h5>\\n        </div>\\n        <div class=\\\"column col-6 col-xs-12 col-sm-12 col-md-12\\\">\\n            <h3 class=\\\"p-t-1\\\">Information:</h3>\\n            <h5 class=\\\"p-t-1\\\">{{fields['firstname']}} {{fields['lastname']}}, {{fields['email']}}</h5>\\n            <h5>{{fields['phone']}}</h5>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"columns p-t-1\\\" [formGroup]=\\\"payForm\\\">\\n        <div class=\\\"column col-6 col-xs-12 col-sm-12 col-md-12 m-b-1\\\">\\n            <div class=\\\"form-group\\\">\\n                <input formControlName=\\\"cardNumber\\\" class=\\\"form-input\\\" type=\\\"text\\\" placeholder=\\\"Card number\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"column col-6 col-xs-12 col-sm-12 col-md-12 m-b-1\\\">\\n            <div class=\\\"form-group\\\">\\n                <input formControlName=\\\"CVC\\\" max=\\\"3\\\" class=\\\"form-input\\\" type=\\\"text\\\" placeholder=\\\"CVC / CVV\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"column col-6 col-xs-12 col-sm-12 col-md-12 m-b-1\\\">\\n            <div class=\\\"form-group\\\">\\n                <input formControlName=\\\"month\\\" max=\\\"2\\\" class=\\\"form-input\\\" type=\\\"text\\\" placeholder=\\\"Month (MM)\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"column col-6 col-xs-12 col-sm-12 col-md-12 m-b-1\\\">\\n            <div class=\\\"form-group\\\">\\n                <input formControlName=\\\"year\\\" max=\\\"4\\\" class=\\\"form-input\\\" type=\\\"text\\\" placeholder=\\\"Year (YYYY)\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"p-t-1 text-right\\\">\\n        <button (click)=\\\"pay()\\\" [disabled]=\\\"this.payForm.status === 'INVALID'\\\" class=\\\"btn btn-primary w-7rem\\\">By\\n        </button>\\n    </div>\\n</div>\"","module.exports = \"\"","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {UserData} from '../userData';\nimport {FormFieldsService, Plan} from '../form-fields.service';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\n\n@Component({\n    selector: 'app-third-tab',\n    templateUrl: './third-tab.component.html',\n    styleUrls: ['./third-tab.component.scss']\n})\nexport class ThirdTabComponent implements OnInit {\n\n    /*выбранный план*/\n    selectedPlan: Plan;\n    /*заплненные поля*/\n    fields: any[];\n\n    /*форма Reactive Forms*/\n    payForm = new FormGroup({\n        cardNumber: new FormControl('', Validators.required),\n\n        CVC: new FormControl('', Validators.compose([\n            Validators.required,\n            /*убираем лишние слэши*/\n            Validators.pattern('[0-9][0-9][0-9]')\n        ])),\n\n        month: new FormControl('', Validators.compose([\n            Validators.required,\n            /*убираем лишние слэши*/\n            Validators.pattern('[0-1][1-9]')\n        ])),\n\n        year: new FormControl('', Validators.compose([\n            Validators.required,\n            /*убираем лишние слэши*/\n            Validators.pattern('[2][0-1][0-9][0-9]')\n        ]))\n    });\n\n    constructor(\n        private router: Router\n        , private userData: UserData\n        , private  formFields: FormFieldsService\n    ) {\n    }\n\n    pay() {\n        console.log(this.payForm);\n        if (this.payForm.status === 'VALID') {\n            this.router.navigate(['thx']);\n        }\n    }\n\n    ngOnInit() {\n        /*проверка на 1-й шаг*/\n        if (this.userData.selectedPlan.id === -1) {\n            /*если ничего не выбрано редиректив начало*/\n            this.router.navigate(['']);\n        }\n\n        /*проверка на 2-й шаг*/\n        if (this.userData.fields == null) {\n            /*если ничего не выбрано редиректив начало*/\n            this.router.navigate(['']);\n        }\n\n        this.fields = this.userData.fields;\n        this.selectedPlan = this.userData.selectedPlan;\n    }\n\n}\n","module.exports = \"\\n\\n<div  class=\\\"container\\\">\\n <h1>Thx!</h1>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-thx',\n  templateUrl: './thx.component.html',\n  styleUrls: ['./thx.component.scss']\n})\nexport class ThxComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable} from '@angular/core';\r\nimport {Field, Plan} from './form-fields.service';\r\n\r\nInjectable();\r\n\r\n/*класс глобального состояния приложения с заполнинными данными формы*/\r\nexport class UserData {\r\n    /*выбраный план*/\r\n    public selectedPlan: Plan = {\r\n        id: -1,\r\n        title: '',\r\n        price: 0,\r\n        currency: '',\r\n        preview: ''\r\n    };\r\n\r\n    public fields: any[];\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}